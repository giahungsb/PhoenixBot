const { Snake } = require("discord-gamecord");
const { useFunctions } = require("@zibot/zihooks");

module.exports.data = {
        name: "snake",
        description: "Tr√≤ ch∆°i r·∫Øn sƒÉn m·ªìi",
        type: 1, // l·ªánh slash
        integration_types: [0],
        contexts: [0, 1],
};
/**
 * @param { object } command - object command
 * @param { import ("discord.js").CommandInteraction } command.interaction - interaction
 * @param { import('../../lang/vi.js') } command.lang - language
 */
module.exports.execute = async ({ interaction, lang }) => {
        const ZiRank = useFunctions().get("ZiRank");
        const Game = new Snake({
                message: interaction,
                isSlashGame: true,
                embed: {
                        title: "R·∫Øn sƒÉn m·ªìi",
                        overTitle: "Tr√≤ ch∆°i k·∫øt th√∫c",
                        color: "#5865F2",
                },
                emojis: {
                        board: "‚¨õ",
                        food: "üçé",
                        up: "‚¨ÜÔ∏è",
                        down: "‚¨áÔ∏è",
                        left: "‚¨ÖÔ∏è",
                        right: "‚û°Ô∏è",
                },
                snake: {
                        head: "üü¢",
                        body: "üü©",
                        tail: "üü¢",
                        skull: "üíÄ",
                },
                foods: ["üçé", "üçá", "üçä", "ü´ê", "ü•ï", "ü•ù", "üåΩ"],
                stopButton: "üü•",
                timeoutTime: 60000,
                playerOnlyMessage: "Only {player} can use these buttons.",
        });

        Game.startGame();
        Game.on("gameOver", async (result) => {
                const { useDB } = require("@zibot/zihooks");
                const DataBase = useDB();
                
                if (result.result === "win") {
                        // Ng∆∞·ªùi th·∫Øng nh·∫≠n ti·ªÅn th√¥ng qua ZiRank (ho·∫°t ƒë·ªông an to√†n)
                        await ZiRank.execute({ user: interaction.user, XpADD: 1, CoinADD: 100 });
                } else {
                        // Ng∆∞·ªùi thua s·ª≠ d·ª•ng ho·∫°t ƒë·ªông nguy√™n t·ª≠ v·ªõi ki·ªÉm tra s·ªë d∆∞
                        const deductResult = await DataBase.ZiUser.findOneAndUpdate(
                                { userID: interaction.user.id, coin: { $gte: 100 } },
                                { $inc: { coin: -100, xp: 1 } },
                                { new: true }
                        ).catch((error) => {
                                console.error(`Snake: Failed to deduct coins from user ${interaction.user.id}:`, error);
                                return null;
                        });
                        
                        if (!deductResult) {
                                // Ng∆∞·ªùi d√πng kh√¥ng c√≥ ƒë·ªß ti·ªÅn, nh∆∞ng tr√≤ ch∆°i ƒë√£ ƒë∆∞·ª£c ch∆°i
                                // V·∫´n t·∫∑ng XP cho vi·ªác tham gia
                                await ZiRank.execute({ user: interaction.user, XpADD: 1, CoinADD: 0 });
                        }
                }
        });
};
