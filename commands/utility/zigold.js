const { EmbedBuilder } = require("discord.js");
const { useFunctions, useDB } = require("@zibot/zihooks");

const zigoldEmoji = "ü™ô"; // ZiGold emoji

module.exports.data = {
	name: "zigold",
	description: "Ki·ªÉm tra s·ªë d∆∞ ZiGold c·ªßa b·∫°n",
	type: 1,
	options: [
		{
			name: "user",
			description: "Ki·ªÉm tra ZiGold c·ªßa ng∆∞·ªùi d√πng kh√°c",
			type: 6,
			required: false,
		},
	],
	integration_types: [0],
	contexts: [0, 1],
};

/**
 * @param { object } command - object command
 * @param { import("discord.js").CommandInteraction } command.interaction - interaction
 * @param { import("../../lang/vi.js") } command.lang - language
 */
module.exports.execute = async ({ interaction, lang }) => {
	const targetUser = interaction.options.getUser("user") || interaction.user;
	const DataBase = useDB();

	let coin = 0;
	let level = 1;
	let xp = 1;

	try {
		if (DataBase) {
			const userDB = await DataBase.ZiUser.findOne({ userID: targetUser.id });
			if (userDB) {
				coin = userDB.coin || 0;
				level = userDB.level || 1;
				xp = userDB.xp || 1;
			}
		} else {
			const errorEmbed = new EmbedBuilder()
				.setTitle("‚ùå L·ªói Database")
				.setColor("#FF0000")
				.setDescription("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database. Vui l√≤ng th·ª≠ l·∫°i sau!");
			return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
		}
	} catch (error) {
		console.error("ZiGold command error:", error);
		const errorEmbed = new EmbedBuilder()
			.setTitle("‚ùå L·ªói")
			.setColor("#FF0000")
			.setDescription("C√≥ l·ªói x·∫£y ra khi truy xu·∫•t th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i!");
		return await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
	}

	const targetUserName = targetUser.member?.displayName ?? targetUser.globalName ?? targetUser.username;
	const displayName = targetUser.id === interaction.user.id ? "b·∫°n" : targetUserName;
	const possessive = targetUser.id === interaction.user.id ? "c·ªßa b·∫°n" : `c·ªßa ${targetUserName}`;

	const embed = new EmbedBuilder()
		.setTitle(`${zigoldEmoji} ZiGold Balance`)
		.setColor("#FFD700")
		.setDescription(`**${displayName}** hi·ªán t·∫°i c√≥ **${coin.toLocaleString()} ZiGold**!`)
		.addFields(
			{
				name: "üí∞ ZiGold",
				value: `${coin.toLocaleString()}`,
				inline: true,
			},
			{
				name: "üìà Level",
				value: `${level}`,
				inline: true,
			},
			{
				name: "‚ú® XP",
				value: `${xp}`,
				inline: true,
			},
		)
		.setThumbnail(targetUser.displayAvatarURL({ dynamic: true }))
		.setFooter({
			text: `Ki·∫øm th√™m ZiGold b·∫±ng c√°ch ch∆°i c√°c tr√≤ ch∆°i v√† t∆∞∆°ng t√°c v·ªõi bot!`,
			iconURL: interaction.client.user.displayAvatarURL(),
		});

	if (coin === 0) {
		embed.setDescription(
			`**${displayName}** ch∆∞a c√≥ ZiGold n√†o! H√£y b·∫Øt ƒë·∫ßu ch∆°i c√°c tr√≤ ch∆°i ƒë·ªÉ ki·∫øm ZiGold ƒë·∫ßu ti√™n ${possessive}!`,
		);
	}

	await interaction.reply({ embeds: [embed] });
};
